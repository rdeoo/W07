@page "/delete/{id}"
@inject HttpClient httpClient
@inject NavigationManager NavManager

<p>Student with ID == @Id</p>

@if (student != null) // Delete form
{
    <h1>Delete</h1>
    <p class="display-static">First Name: @student.FirstName</p>
    <p class="display-static">Last Name: @student.LastName</p>
    <p class="display-static">School: @student.School</p>
    <EditForm Model="@student" OnValidSubmit="@HandleDelete">
        <button type="submit" value="Delete" class="btn btn-danger">Submit</button>
        @code {
        protected async void HandleDelete()
        {
            string endpoint = $"{Constants.BASE_URL}api/students/{student!.StudentId}";
            await httpClient.DeleteAsync(endpoint);
            NavManager.NavigateTo("/students");
        }
    }
    </EditForm>
}

@code {
    [Parameter]
    public string? Id { get; set; }
    Student? student;

    protected override async Task OnInitializedAsync()
    {
        var url = $"{Constants.BASE_URL}api/students/{Id}";
        student = await httpClient.GetFromJsonAsync<Student>(url);
    }
}
